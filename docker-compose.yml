version: '3'
services:
  postgres:
    image: postgis/postgis:latest
    environment:
      - POSTGRES_DB=${DJANGO_DATABASE_NAME:-django}
      - POSTGRES_PASSWORD=${DJANGO_MINIO_STORAGE_SECRET_KEY:-postgres}
    ports:
      - ${DOCKER_POSTGRES_PORT-5432}:5432
    volumes:
      - postgres:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:management
    ports:
      - ${DOCKER_RABBITMQ_PORT-5672}:5672
      - ${DOCKER_RABBITMQ_CONSOLE_PORT-15672}:15672
    volumes:
      - rabbitmq:/var/lib/rabbitmq/mnesia

  minio:
    image: minio/minio:latest
    # When run with a TTY, minio prints credentials on startup
    tty: true
    command: ["server", "/data", "--console-address", ":${DOCKER_MINIO_CONSOLE_PORT-9001}"]
    environment:
      - MINIO_ROOT_USER=${DJANGO_MINIO_STORAGE_ACCESS_KEY:-minioAccessKey}
      - MINIO_ROOT_PASSWORD=${DJANGO_DATABASE_PASSWORD:-minioSecretKey}
    ports:
      - ${DOCKER_MINIO_PORT-9000}:9000
      - ${DOCKER_MINIO_CONSOLE_PORT-9001}:9001
    volumes:
      - minio:/data

  flower:
    build:
      context: .
      dockerfile: ./dev/django.Dockerfile
    command: [
      "celery",
      "--app", "bats_ai.celery",
      "flower"
    ]
    tty: false
    env_file: ./dev/.env.docker-compose
    volumes:
      - .:/opt/django-project
    ports:
      - ${DOCKER_FLOWER_PORT-5555}:5555
    depends_on:
      - postgres
      - rabbitmq
      - minio
      - celery

volumes:
  postgres:
  sourcedb:
  minio:
  rabbitmq:
